@import "../utils/colors.scss";
@import "../utils/constant.scss";

.f-checkbox {
  height: fit-content;
  width: fit-content;
  border-radius: 0;
  margin: $input_margin;
  text-align: center;

  input[type="checkbox"]{
    display: none;
  }

  &.label-start {
    label{
      flex-direction: row-reverse;
      &::before{
        margin-right: 0;
        margin-left: 0.5rem;
      }
    }
  }

  &.sm{
    label{
      &::before{
        height: 0.8rem;
        width: 0.8rem;
        font-size: 0.7rem;
      }
    }
  }
  &.lg{
    label{
      &::before{
        height: 1.2rem;
        width: 1.2rem;
        font-size: 1rem;
      }
    }
  }

  label {
    color: $input_font_color;
    width: fit-content;
    display: flex;
    flex-direction: row;
    align-items: center;

    &::before {
      border: 0.1rem solid $input_border_color;
      border-radius: $input_border_radius;
      height: 1rem;
      width: 1rem;
      font-size: 0.8rem;
      padding: 0;
      display: inline-block;
      content: "";
      cursor: pointer;
      margin-right: 0.5rem;
    }

    &:focus{
      outline: unset;
      border: unset;
    }
  }

  &.checked{
    label{
      &::before{
        background-color: $color_primary;
        content: '\2713';
        color: white;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 0.1rem solid $color_primary;
      }
    }
  }

  &:has(label:focus){
    label{
      &::before{
        border: 0.1rem solid $input_focus_color;
        box-shadow: 0 0 0 0.2rem rgba(59, 130, 246, 0.25);
      }
    }
  }

  &:has(input:disabled){
    label{
      &::before{
        background-color: $input_disabled_bg_color;
        color: $input_border_color;
        border: 0.1rem solid $input_border_color;
        box-shadow: unset;
      }
    }
  }
  // TODO: fix readonly focus style
  //&:has(input:read-only){
  //  label{
  //    &::before{
  //      box-shadow: unset;
  //    }
  //  }
  //}
}